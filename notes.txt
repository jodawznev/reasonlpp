Vars:
	* color_map[] -> current color map
	* default_color_map[] -> Default color map (to be used in init, and on note pad release)
	* full_velocity -> bool (intialize as true)
	* BTN_OCTAVEUP -> TOP1
	* BTN_OCTAVEDOWN -> TOP2
	* BTN_PREVINST -> TOP3
	* BTN_NEXTINST -> TOP4
	* BTN_STOP -> BOTTOM6
	* BTN_PLAY -> BOTTOM7
	* BTN_RECORD -> BOTTOM8
	* BTN_TOGGLEVEL -> LEFT1
	
	* toggle_values[] - Holds current value of the toggles (initialize at zero)
	
	* fader_value_map[] - Maps y-index of button to CC value to send
		0 -> 0
		1 -> 0
		2 -> 0
		3 -> 21
		4 -> 42
		5 -> 63
		6 -> 84
		7 -> 105
		8 -> 127
		9 -> 127
	* fader_cc_map[] - Maps x-index of button to CC number to send
		0 -> 0
		1 -> 0
		2 -> 0
		3 -> 0
		4 -> 0
		5 -> 71
		6 -> 72
		7 -> 73
		8 -> 74
		9 -> 0
	* note_map[] - Maps pads to notes
	
Methods:
	* set_color_map(index, color)
	* is_pad(index)
	* is_util(index)
	* is_note(index)
	* is_fader(index)
	* is_toggle(index)
	
	* octave_up()
	* octave_down()

Colors:
	* Pressed: white
	* Note: yellow -> orange
		Oct1 yellow
		Oct2 orange
		Oct3 dark orange
	* Util: Red
		color_util
		color_util_dark
	* Toggle: Green
		color_toggle_on
		color_toggle_off
	* Fader: Blue
		color_fader_on_0    (0)
		color_fader_on_1   (21)
		color_fader_on_2   (42)
		color_fader_on_3   (63)
		color_fader_on_4   (84)
		color_fader_on_5  (105)
		color_fader_on_6  (127)
		color_fader_off_0   (0)
		color_fader_off_1  (21)
		color_fader_off_2  (42)
		color_fader_off_3  (63)
		color_fader_off_4  (84)
		color_fader_off_5 (105)
		color_fader_off_6 (127)
Map:
	    +---+---+---+---+---+---+---+---+
	    | UP|DWN|LFT|RGT|   |   |   |   |
	+---+---+---+---+---+---+---+---+---+---+
	|   | E3| F3|F#3| G3| F1| F2| F3| F4|   +
	+---+---+---+---+---+---+---+---+---+---+
	|   | C3|C#3| D3|D#3| F1| F2| F3| F4|   +
	+---+---+---+---+---+---+---+---+---+---+
	|   |G#2| A2|A#2| B2| F1| F2| F3| F4|   +
	+---+---+---+---+---+---+---+---+---+---+
	|   | E2| F2|F#2| G2| F1| F2| F3| F4|   +
	+---+---+---+---+---+---+---+---+---+---+
	|   | C2|C#2| D2|D#2| F1| F2| F3| F4|   +
	+---+---+---+---+---+---+---+---+---+---+
	|   |G#1| A1|A#1| B1| F1| F2| F3| F4|   +
	+---+---+---+---+---+---+---+---+---+---+
	|   | E1| F1|F#1| G1| F1| F2| F3| F4|   +
	+---+---+---+---+---+---+---+---+---+---+
	|VEL| C1|C#1| D1|D#1| T1| T2| T3| T4|   +
	+---+---+---+---+---+---+---+---+---+---+
	    |   |   |   |   |   |STP|PLY|REC|
	    +---+---+---+---+---+---+---+---+
	
		+---+---+---+---+---+---+---+---+
	    | 91| 92| 93| 94| 95| 96| 97| 98|
	+---+---+---+---+---+---+---+---+---+---+
	| 80| 81| 82| 83| 84| 85| 86| 87| 88| 89+
	+---+---+---+---+---+---+---+---+---+---+
	| 70| 71| 72| 73| 74| 75| 76| 77| 78| 79+
	+---+---+---+---+---+---+---+---+---+---+
	| 60| 61| 62| 63| 64| 65| 66| 67| 68| 69+
	+---+---+---+---+---+---+---+---+---+---+
	| 50| 51| 52| 53| 54| 55| 56| 57| 58| 59+
	+---+---+---+---+---+---+---+---+---+---+
	| 40| 42| 42| 43| 44| 45| 46| 47| 48| 49+
	+---+---+---+---+---+---+---+---+---+---+
	| 30| 31| 32| 33| 34| 35| 36| 37| 38| 39+
	+---+---+---+---+---+---+---+---+---+---+
	| 20| 21| 22| 23| 24| 25| 26| 27| 28| 29+
	+---+---+---+---+---+---+---+---+---+---+
	| 10| 11| 12| 13| 14| 15| 16| 17| 18| 19+
	+---+---+---+---+---+---+---+---+---+---+
	    | 01| 02| 03| 04| 05| 06| 07| 08|
	    +---+---+---+---+---+---+---+---+
	
	VEL: Toggle full velocity on/off
	
	UP:  Octave++
	DWN: Octave--
	LFT: Prev instrument (TBD)
	RGT: Next instrument (TBD)
	
	F1-4: Rotaries for combinator (CC 71-74)
		Values: 0, 21, 42, 63, 84, 105, 127
	T1-4: Toggles for combinator (CC 75-78)
		Values: 0, 127
	
	U:   Config mode (TBD)
	N:   Switch between note modes (drum pads vs. keyboard) (TBD)

event(index, value) {
	set_color_map(index, color_pressed);
	if (is_util(index)) {
		event_util(index);
	} else if (is_fader(index)) {
		event_fader(index);
	} else if (is_note(index)) {
		event_note(index);
	} else if {is_toggle(index)) {
		event_toggle(index);
	}
	
	//Draw color_map
	draw_color_map();
}

bool is_press(u8 value) {
	return value != 0;
}

bool is_release(u8 value) {
	return value == 0;
}

void draw_color_map() {
	for (u8 i = 0; i < BUTTONCOUNT; i++) {
		//Send color_map[i] to the button
		hal_plot_led(TYPEPAD, i, color_map[i][0], color_map[i][1], color_map[i][2]);
	}
}

void event_note(index, value) {
	if (is_press) {
		//Send MIDI note on (with full_velocity check)
		hal_send_midi(USBMIDI, NOTEON | 0, note_map[index] + (12 * current_octave), full_velocity ? 127 : value);
	} else {
		//Send MIDI note off
		hal_send_midi(USBMIDI, NOTEON | 0, note_map[index] + (12 * current_octave), 0);
		
		//Reset the note pad to its default color
		set_color_map(index, default_color_map[index]);
	}
}

void event_toggle(index) {
	if (is_press) {
		//Send MIDI CC value
		u8 cc_number = toggle_cc_map[index];
		u8 cc_value = toggle_value_map[index];
		
		//Send MIDI message
		hal_send_midi(USBMIDI, CC | 0, cc_number, cc_value);
		
		//Set the color of the toggle
		set_color_map(index, cc_value == 0 ? color_toggle_off : color_toggle_on);
	}
}

void event_fader(index, value) {
	if (is_press(value)) {
		//Send MIDI CC value
		u8 y_index = index / 10;
		u8 x_index = index % 10;
		
		u8 cc_value = fader_value_map[y_index];
		u8 cc_number = fader_cc_map[x_index];
		
		hal_send_midi(USBMIDI, CC | 0, cc_number, cc_value);
		
		//Current button will be lit (color_fader_on)
		//Buttons below will be lit (color_fader_on)
		//Buttons above will be off (color_fader_off)
		
		for (u8 i = index; i < 90; i += 10) {
			set_color_map(i, color_fader_on);
		}
		for (u8 i = index - 10; i > 10; i -= 10) {
			set_color_map(i, color_fader_off);
		}
	}
}

void event_util(index, value) {
	if (is_press(value)) {
		switch (index) {
			case BTN_OCTAVEUP:
				octave_up();
				break;
			case BTN_OCTAVEDOWN:
				octave_down();
				break;
			case BTN_TOGGLEVEL:
				toggle_full_velocity();
				break;
			case BTN_PREVINST:
				break;
			case BTN_NEXTINST:
				break;
			case BTN_PLAY:
				break;
			case BTN_STOP:
				break;
			case BTN_REC:
				break;
		}
	}
}

void octave_up() {
	if (current_octave < 7) {
		current_octave++;
	}
	
	if (current_octave == 7) {
		//Disable octave up button, already at max
		set_color_map(BTN_OCTAVEUP, color_off);
	}
	
	//Enable octave down button
	set_color_map(BTN_OCTAVEDOWN, color_red);
}

void octave_down() {
	if (current_octave > 0) {
		current_octave--;
	}
	
	if (current_octave == 0) {
		//Disable octave down button, already at min
		set_color_map(BTN_OCTAVEDOWN, color_off);
	}
	
	//Enable octave up button
	set_color_map(BTN_OCTAVEUP, color_red);
}

void toggle_full_velocity() {
	full_velocity = !full_velocity;
	set_color_map(BTN_TOGGLEVEL, full_velocity ? color_red : color_red_dark);
}